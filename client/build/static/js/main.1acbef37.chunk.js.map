{"version":3,"sources":["Card/Card.js","Search/Search.js","MyBooks/MyBooks.js","App.js","registerServiceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleSaveBook","bind","assertThisInitialized","handleDeleteBook","fetch","method","headers","Content-Type","body","JSON","stringify","response","json","console","log","concat","id","serverResponse","table","react_default","a","createElement","className","title","authors","src","image","alt","description","substring","href","link","delete","onClick","Component","defaultProps","Search","searchQuery","booksArray","handleChange","handleSubmit","evt","preventDefault","requestBooksAPI","setState","target","value","bookObj","newArr","idx","items","length","_bookObj$items$idx$vo","volumeInfo","imageLinks","infoLink","thumbnail","undefined","tempObj","push","onSubmit","type","onChange","htmlFor","name","map","item","src_Card_Card","MyBooks","savedBooks","_id","App","data-target","react_router_dom","to","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1acbef37.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Card.css';\n\nclass Card extends Component {\n    static defaultProps = {\n        title: \"No Title\",\n        authors: \"Unknown Author\",\n        description: \"\",\n        image: \"https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png\",\n        link: \"#\"\n    }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             \n        }\n\n        this.handleSaveBook = this.handleSaveBook.bind(this);\n        this.handleDeleteBook = this.handleDeleteBook.bind(this);\n    }\n    \n\n    async handleSaveBook () {\n        let response = await fetch('/api/books', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.props),\n        });\n        let json = await response.json();\n        console.log(json);\n\n    }\n\n    async handleDeleteBook () {\n      console.log('hihi');\n      let response = await fetch(`/api/books/${this.props.id}`, {\n        method: 'DELETE',\n      });\n      let serverResponse = await response.json();\n      console.log(`Server's response to delete request`);\n      console.table(serverResponse);\n    }\n\n    render() {\n      console.log('child props', this.props.id)\n        return (\n            // <div className=\"Card card large col s6\">\n            //     <div className=\"card-image waves-effect waves-block waves-light\">\n            //         <img className=\"activator\" src={this.props.image} />\n            //     </div>\n            //     <div className=\"card-content\">\n            //         <span className=\"card-title activator grey-text text-darken-4\">{this.props.title} <span className=\"author-span\"> by {this.props.authors} </span><i className=\"material-icons right\">more_vert</i></span>\n            //         <a className=\"waves-effect waves-light btn\">save</a>\n            //     </div>\n            //     <div className=\"card-reveal\">\n            //         <span className=\"card-title grey-text text-darken-4\">{this.props.title}<i className=\"material-icons right\">close</i></span>\n            //         <p><a href={this.props.link}>Link to Page</a></p>\n            //         <p>{this.props.description}</p>\n            //     </div>\n            // </div>\n            <div className=\"col s12 l6 m8 offset-m2\">\n            <h2 className=\"header\">{this.props.title} <span className=\"author-span\">by {this.props.authors}</span></h2>\n            <div className=\"card horizontal\">\n              <div className=\"card-image\">\n                <img src={this.props.image} alt={this.props.title}/>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <p>\n                    {this.props.description.substring(0,200)+ \"...\"}\n                    <br/>\n                    <a href={this.props.link}>Read More...</a>\n                  </p>\n                </div>\n                <div className=\"card-action\">\n                  {this.props.delete === true ? \n                  <button className=\"waves-effect waves-light btn right\" onClick={this.handleDeleteBook}>Delete</button>\n                  :\n                  <button className=\"waves-effect waves-light btn right\" onClick={this.handleSaveBook}>save</button>\n                  }\n                  <a className=\"waves-effect waves-light btn right\" href={this.props.link}>Buy</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from '../Card/Card';\nimport './Search.css';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            searchQuery: \"\",\n            booksArray: []\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    // componentDidMount() {\n    //     fetch('https://www.googleapis.com/books/v1/volumes?q')\n    // }\n    handleSubmit(evt) {\n        evt.preventDefault();\n        this.requestBooksAPI();\n        this.setState({ searchQuery: \"\" });\n    }\n\n    handleChange(evt) {\n        this.setState({ searchQuery: evt.target.value });\n    }\n\n    async requestBooksAPI() {\n        let response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${this.state.searchQuery}`)\n        let bookObj = await response.json();\n        // console.log(bookObj.items[0].volumeInfo.title)\n        // console.log(bookObj.items[0].volumeInfo.authors)\n        // console.log(bookObj.items[0].volumeInfo.description)\n        // console.log(bookObj.items[0].volumeInfo.imageLinks.thumbnail)\n        // console.log(bookObj.items[0].volumeInfo.infoLink)\n\n        const newArr = [];\n\n        for (let idx = 0; idx < bookObj.items.length; idx++) {\n            let { title, authors, description, imageLinks, infoLink } = bookObj.items[idx].volumeInfo;\n            let thumbnail;\n            imageLinks === undefined ? thumbnail = \"\" : thumbnail = imageLinks.thumbnail;\n            let tempObj = {\n                title: title,\n                authors: authors,\n                description: description,\n                image: thumbnail,\n                link: infoLink\n            }\n\n            newArr.push(tempObj);\n        }\n\n        // console.table(newArr)\n        this.setState({ booksArray: [...newArr] })\n        console.log(this.state.booksArray)\n    }\n\n    render() {\n        return (\n            <div className=\"Search container\">\n                <br />\n                <div className=\"row\">\n                    <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"input-field col s8\">\n                                <i className=\"material-icons prefix\">search</i>\n                                <input id=\"searchQuery\" type=\"text\" value={this.state.searchQuery} onChange={this.handleChange} />\n                                <label htmlFor=\"searchQuery\">Search</label>\n                            </div>\n                            <div className=\"col s4\">\n                                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit\n                                <i className=\"material-icons right\">send</i>\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {this.state.booksArray.map( item => {\n                            return (<Card \n                                title={item.title}\n                                authors={item.authors}\n                                description={item.description}\n                                link={item.link}\n                                image={item.image}\n                                />)\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport './MyBooks.css';\nimport Card from '../Card/Card';\n\nclass MyBooks extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             savedBooks: []\n        }\n    }\n    \n\n\n    async componentDidMount() {\n        const response = await fetch('/api/books'); // quesiton: how does this know where to fetch\n        const savedBooks = await response.json();\n\n        console.log(savedBooks);\n        this.setState({ savedBooks })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                {this.state.savedBooks.map( item => {\n                    return (<Card \n                        title={item.title}\n                        authors={item.authors}\n                        description={item.description}\n                        link={item.link}\n                        image={item.image}\n                        delete={true}\n                        id={item._id}\n                        />)\n                })}\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default MyBooks;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Search from './Search/Search';\nimport MyBooks from './MyBooks/MyBooks';\nimport { NavLink, Route, Switch } from 'react-router-dom';\n// import AppBar from \"./AppBar/AppBar\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <nav id=\"NavBar\">\n          <div className=\"nav-wrapper white\">\n            <a href=\"/\" className=\"brand-logo black-text center\">\n              <i className=\"material-icons\">book</i> BookSearch</a>\n            <button id=\"sidenavbtn\" href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger black-text\">\n              <i className=\"material-icons\">menu</i>\n            </button>\n            <ul className=\"right hide-on-med-and-down\">\n              <li>\n                <NavLink className=\"black-text\" to='/'>\n                  Search\n                </NavLink>\n              </li>\n              <li>\n                <NavLink className=\"black-text\" to='/mybooks'>\n                  My Books\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <ul className=\"sidenav\" id=\"mobile-demo\">\n          <li>\n            <NavLink className=\"black-text\" to='/'>\n              Search\n            </NavLink>\n          </li>\n          <li>\n            <NavLink className=\"black-text\" to='/mybooks'>\n              My Books\n            </NavLink>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route exact path='/' component={Search} />\n          <Route exact path='/mybooks' component={MyBooks} />\n        </Switch>\n\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}